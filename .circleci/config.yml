# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  package:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      MAVEN_OPTS: -Xmx3200m 

    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mvn -s .circleci/.circleci.settings.xml package -DskipTests
      #Why save the cache twice?  In case the mvn test didn't pull everything correctly, we have a second go.
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - run: mkdir -p /tmp/workspace/
      - run: cp Dockerfile /tmp/workspace/
      - run: pwd
      - run: ls -al
      - persist_to_workspace:
          root: /tmp/workspace/
          paths:
            - ./*
            - ./*.jar
            - ./Dockerfile
  lint:
    docker:
      - image: circleci/node

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          command: |
            cd exec-ui
            npm install
            npm run lint
  test:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m 
    steps:
      - checkout    
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: mvn -s .circleci/.circleci.settings.xml clean test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit/
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
  deploy:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m 
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: VERSION_NUM=($CIRCLE_BUILD_NUM + 1) && sed -i "s/BUILDNUMBER/$VERSION_NUM/g" pom.xml
      - run: mvn -s .circleci/.circleci.settings.xml deploy -DskipTests


  publish:
    machine:
      enabled: true
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: ls -lart /tmp/workspace/target
      - run: mkdir analysis-target && mv /tmp/workspace/exec-analysis/target/exec-analysis-*.jar analysis-target/exec-analysis.jar && mv /tmp/workspace/exec-analysis/Dockerfile ./Dockerfile
      - run: |
          TAG=1.1.$CIRCLE_BUILD_NUM
          docker build -t sredna/hygieia-exec-analysis:$TAG .
          docker tag sredna/hygieia-exec-analysis:$TAG sredna/hygieia-exec-analysis:latest
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push sredna/hygieia-exec-analysis:$TAG
          docker push sredna/hygieia-exec-analysis:latest
workflows:
  version: 2
  full_boat:
    jobs: 
      #- lint
      - test
      - package:
          requires:
            - test
          filters:
            branches:
              only:
                - master
#      - deploy:
#          requires:
#            - test
#          filters:
#            branches:
#              only:
#                - master
#      - publish:
#          requires:
#            - package
#          filters:
#            branches:
#              only:
#                - master
