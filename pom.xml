<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <name>${project.groupId}:${project.artifactId}</name>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>1.10.19</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <packaging>pom</packaging>

  <groupId>com.capitalone.dashboard</groupId>
  <artifactId>Hygieia</artifactId>
  <version>3.0.1</version>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.3.0.RELEASE</version>
  </parent>

  <licenses>
    <license>
      <name>The Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Amit Mawkin</name>
      <email>amit.mawkin@capitalone.com</email>
      <organization>CapitalOne</organization>
      <organizationUrl>http://www.capitalone.com</organizationUrl>
    </developer>
    <developer>
      <name>Tapabrata Topo Pal</name>
      <email>tapabrata.pal@capitalone.com</email>
      <organization>CapitalOne</organization>
      <organizationUrl>http://www.capitalone.com</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:https://github.com/capitalone/Hygieia.git/</connection>
    <developerConnection>scm:git:https://github.com/capitalone/Hygieia.git/</developerConnection>
    <url>https://github.com/capitalone/Hygieia.git</url>
    <tag>HEAD</tag>
  </scm>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <properties>
    <spring-data-releasetrain.version>Gosling-RELEASE</spring-data-releasetrain.version>
    <mongodb.version>3.0.2</mongodb.version>
    <mongo>3.0.2</mongo>
    <spring.version>4.2.5.RELEASE</spring.version>
    <spring.cloud.version>1.3.1.RELEASE</spring.cloud.version>
    <jackson.version>2.5.0</jackson.version>
    <guava.version>16.0.1</guava.version>
    <pmd.version>3.6</pmd.version>
    <jacoco.version>0.7.6.201602180812</jacoco.version>
    <joda-time.version>2.7</joda-time.version>
    <joda-convert.version>1.8.1</joda-convert.version>
    <docker.useConfigFile>false</docker.useConfigFile>
<javac.version>9+181-r4173-1</javac.version>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <configuration>
          <skipDockerBuild>true</skipDockerBuild>
          <useConfigFile>${docker.useConfigFile}</useConfigFile>
        </configuration>
        <executions>
          <execution>
            <!-- Note: Today we make the containers optional, we want these
              standard we should uncomment this: -->
            <!--<phase>package</phase>-->
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${pmd.version}</version>
        <configuration>
          <excludeRoots>
            <excludeRoot>${project.basedir}/target/generated-sources/java</excludeRoot>
          </excludeRoots>
          <rulesets>
            <ruleset>${project.parent.basedir}/pmd.xml</ruleset>
          </rulesets>
        </configuration>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
              <!-- disabled for now: -->
              <!--<goal>cpd-check</goal>-->
            </goals>
          </execution>
        </executions>
      </plugin>
<plugin>
<groupId>org.apache.maven.plugins</groupId>
<artifactId>maven-compiler-plugin</artifactId>
<version>3.5.1</version>
<configuration>
	<source>8</source>
	<target>8</target>
	<showWarnings>true</showWarnings>
	<compilerArgs>
		<arg>-XDcompilePolicy=simple</arg>
		<arg>-Xplugin:ErrorProne -XepAllErrorsAsWarnings -Xep:AndroidJdkLibsChecker:ERROR -Xep:AssistedInjectAndInjectOnSameConstructor:ERROR -Xep:AutoFactoryAtInject:ERROR -Xep:ClassName:ERROR -Xep:ComparisonContractViolated:ERROR -Xep:DepAnn:ERROR -Xep:DivZero:ERROR -Xep:EmptyIf:ERROR -Xep:FuzzyEqualsShouldNotBeUsedInEqualsMethod:ERROR -Xep:InjectInvalidTargetingOnScopingAnnotation:ERROR -Xep:InjectMoreThanOneQualifier:ERROR -Xep:InjectScopeAnnotationOnInterfaceOrAbstractClass:ERROR -Xep:InjectScopeOrQualifierAnnotationRetention:ERROR -Xep:InjectedConstructorAnnotations:ERROR -Xep:InsecureCryptoUsage:ERROR -Xep:IterablePathParameter:ERROR -Xep:JMockTestWithoutRunWithOrRuleAnnotation:ERROR -Xep:Java7ApiChecker:ERROR -Xep:JavaxInjectOnFinalField:ERROR -Xep:LockMethodChecker:ERROR -Xep:LongLiteralLowerCaseSuffix:ERROR -Xep:NoAllocation:ERROR -Xep:NumericEquality:ERROR -Xep:ParameterPackage:ERROR -Xep:RestrictTo:ERROR -Xep:StaticOrDefaultInterfaceMethod:ERROR -Xep:UnlockMethod:ERROR -Xep:AnnotateFormatMethod:ERROR -Xep:AnnotationPosition:ERROR -Xep:AssertFalse:ERROR -Xep:AssistedInjectAndInjectOnConstructors:ERROR -Xep:BinderIdentityRestoredDangerously:ERROR -Xep:BindingToUnqualifiedCommonType:ERROR -Xep:ConstructorInvokesOverridable:ERROR -Xep:ConstructorLeaksThis:ERROR -Xep:EmptyTopLevelDeclaration:ERROR -Xep:EqualsBrokenForNull:ERROR -Xep:ExpectedExceptionChecker:ERROR -Xep:FunctionalInterfaceClash:ERROR -Xep:HardCodedSdCardPath:ERROR -Xep:InconsistentOverloads:ERROR -Xep:InvalidParam:ERROR -Xep:InvalidTag:ERROR -Xep:InvalidThrows:ERROR -Xep:MissingDefault:ERROR -Xep:MutableMethodReturnType:ERROR -Xep:NoFunctionalReturnType:ERROR -Xep:NonCanonicalStaticMemberImport:ERROR -Xep:NullableDereference:ERROR -Xep:PrimitiveArrayPassedToVarargsMethod:ERROR -Xep:ProtosAsKeyOfSetOrMap:ERROR -Xep:ProvidesFix:ERROR -Xep:QualifierWithTypeUse:ERROR -Xep:RedundantThrows:ERROR -Xep:ReturnFromVoid:ERROR -Xep:StaticQualifiedUsingExpression:ERROR -Xep:StringEquality:ERROR -Xep:SystemExitOutsideMain:ERROR -Xep:TestExceptionChecker:ERROR -Xep:UnnecessaryDefaultInEnumSwitch:ERROR -Xep:Unused:ERROR -Xep:UnusedException:ERROR -Xep:Var:ERROR -Xep:BooleanParameter:ERROR -Xep:ClassNamedLikeTypeParameter:ERROR -Xep:ConstantField:ERROR -Xep:EmptySetMultibindingContributions:ERROR -Xep:ExpectedExceptionRefactoring:ERROR -Xep:FieldCanBeFinal:ERROR -Xep:FieldMissingNullable:ERROR -Xep:ImmutableRefactoring:ERROR -Xep:LambdaFunctionalInterface:ERROR -Xep:MethodCanBeStatic:ERROR -Xep:MixedArrayDimensions:ERROR -Xep:MultiVariableDeclaration:ERROR -Xep:MultipleTopLevelClasses:ERROR -Xep:MultipleUnaryOperatorsInMethodCall:ERROR -Xep:PackageLocation:ERROR -Xep:ParameterComment:ERROR -Xep:ParameterNotNullable:ERROR -Xep:PrivateConstructorForNoninstantiableModule:ERROR -Xep:PrivateConstructorForUtilityClass:ERROR -Xep:RemoveUnusedImports:ERROR -Xep:ReturnMissingNullable:ERROR -Xep:ScopeOnModule:ERROR -Xep:SwitchDefault:ERROR -Xep:TestExceptionRefactoring:ERROR -Xep:ThrowsUncheckedException:ERROR -Xep:TryFailRefactoring:ERROR -Xep:TypeParameterNaming:ERROR -Xep:UngroupedOverloads:ERROR -Xep:UnnecessarySetDefault:ERROR -Xep:UnnecessaryStaticImport:ERROR -Xep:UseBinds:ERROR -Xep:WildcardImport:ERROR</arg>
	</compilerArgs>
	<annotationProcessorPaths>
		<path>
			<groupId>com.google.errorprone</groupId>
			<artifactId>error_prone_core</artifactId>
			<version>2.3.2</version>
		</path>
	</annotationProcessorPaths>
</configuration>
</plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.spotify</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>0.4.10</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <!--<groupId>org.sonarsource.scanner.maven</groupId>-->
          <artifactId>sonar-maven-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.5.1</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>report</id>
              <phase>verify</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>defaultBuild</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
        <module>api</module>
        <module>api-audit</module>
        <module>collectors/audit/nfrr</module>
        <module>collectors/feature/rally</module>
        <module>collectors/artifact/artifactory</module>
        <module>collectors/build/bamboo</module>
        <module>collectors/build/jenkins</module>
        <module>collectors/build/jenkins-cucumber</module>
        <module>collectors/build/jenkins-codequality</module>
        <module>collectors/build/sonar</module>
        <module>collectors/cloud/aws</module>
        <module>collectors/deploy/udeploy</module>
        <module>collectors/deploy/xldeploy</module>
        <module>collectors/feature/jira</module>
        <module>collectors/feature/versionone</module>
        <module>collectors/feature/gitlab</module>
        <module>collectors/misc/chat-ops</module>
        <module>collectors/performance/appdynamics</module>
        <module>collectors/scm/bitbucket</module>
        <module>collectors/scm/github</module>
        <module>collectors/scm/github-graphql</module>
        <module>collectors/scm/subversion</module>
        <module>collectors/scm/gitlab</module>
        <module>collectors/cmdb/hpsm</module>
        <module>collectors/library-policy/nexus-iq-collector</module>
        <module>collectors/misc/score</module>
        <module>collectors/test-results/jira-xray</module>
        <module>hygieia-jenkins-plugin</module>
        <module>UI</module>
        <module>UI-tests</module>
      </modules>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <version>3.5.1</version>
              <configuration>
                <source>1.8</source>
                <target>1.8</target>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <modules>
        <module>api</module>
        <module>api-audit</module>
        <module>collectors/artifact/artifactory</module>
        <module>collectors/audit/nfrr</module>
        <module>collectors/build/bamboo</module>
        <module>collectors/build/jenkins</module>
        <module>collectors/build/jenkins-cucumber</module>
        <module>collectors/build/jenkins-codequality</module>
        <module>collectors/build/sonar</module>
        <module>collectors/cloud/aws</module>
        <module>collectors/deploy/udeploy</module>
        <module>collectors/deploy/xldeploy</module>
        <module>collectors/feature/jira</module>
        <module>collectors/feature/versionone</module>
        <module>collectors/feature/gitlab</module>
        <module>collectors/misc/chat-ops</module>
        <module>collectors/performance/appdynamics</module>
        <module>collectors/scm/bitbucket</module>
        <module>collectors/scm/github</module>
        <module>collectors/scm/github-graphql</module>
        <module>collectors/scm/subversion</module>
        <module>collectors/scm/gitlab</module>
        <module>collectors/cmdb/hpsm</module>
        <module>collectors/library-policy/nexus-iq-collector</module>
        <module>collectors/misc/score</module>
        <module>collectors/test-results/jira-xray</module>
        <module>hygieia-jenkins-plugin</module>
     	<module>UI</module>
        <module>UI-tests</module>
 </modules>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.5.1</version>
            <configuration>
              <source>1.8</source>
              <target>1.8</target>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>2.2.1</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>2.9.1</version>
            <configuration>
              <additionalparam>-Xdoclint:none</additionalparam>
            </configuration>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.5</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
<profile>
<id>jdk8</id>
<activation>
	<jdk>1.8</jdk>
</activation>
<build>
	<plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<configuration>
				<fork>true</fork>
				<compilerArgs combine.children="append">
					<arg>-J-Xbootclasspath/p:${settings.localRepository}/com/google/errorprone/javac/${javac.version}/javac-${javac.version}.jar</arg>
				</compilerArgs>
			</configuration>
		</plugin>
	</plugins>
</build>
</profile>
  </profiles>

</project>
